{"ast":null,"code":"var _jsxFileName = \"/home/mooncoffee/git/to-do-list-app-react-wsp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport AddTaskForm from './components/AddTaskForm.jsx';\nimport UpdateForm from './components/UpdateForm.jsx';\nimport ToDo from './components/ToDo.jsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Tasks (ToDo List) State\n  const [toDo, setToDo] = useState([]); // Temp State\n\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState(''); // Add task \n  ///////////////////////////\n\n  const addTask = () => {\n    if (newTask) {\n      let num = toDo.length + 1;\n      let newEntry = {\n        id: num,\n        title: newTask,\n        status: false\n      };\n      setToDo([...toDo, newEntry]);\n      setNewTask('');\n    }\n  }; // Delete task \n  ///////////////////////////\n\n\n  const deleteTask = id => {\n    let newTasks = toDo.filter(task => task.id !== id);\n    setToDo(newTasks);\n  }; // Mark task as done or completed\n  ///////////////////////////\n\n\n  const markDone = id => {\n    let newTask = toDo.map(task => {\n      if (task.id === id) {\n        return { ...task,\n          status: !task.status\n        };\n      }\n\n      return task;\n    });\n    setToDo(newTask);\n  }; // Cancel update\n  ///////////////////////////\n\n\n  const cancelUpdate = () => {\n    setUpdateData('');\n  }; // Change task for update\n  ///////////////////////////\n\n\n  const changeTask = e => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false\n    };\n    setUpdateData(newEntry);\n  }; // Update task\n  ///////////////////////////\n\n\n  const updateTask = () => {\n    let filterRecords = [...toDo].filter(task => task.id !== updateData.id);\n    let updatedObject = [...filterRecords, updateData];\n    setToDo(updatedObject);\n    setUpdateData('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To Do List App (ReactJS)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this), updateData && updateData ? /*#__PURE__*/_jsxDEV(UpdateForm, {\n      updateData: updateData,\n      changeTask: changeTask,\n      updateTask: updateTask,\n      cancelUpdate: cancelUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      newTask: newTask,\n      setNewTask: setNewTask,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), toDo && toDo.length ? '' : 'No Tasks man... add smth', /*#__PURE__*/_jsxDEV(ToDo, {\n      toDo: toDo,\n      markDone: markDone,\n      setUpdateData: setUpdateData,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WnUslEIzMoXi1Re3N9nOTp15B1w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mooncoffee/git/to-do-list-app-react-wsp/src/App.js"],"names":["useState","AddTaskForm","UpdateForm","ToDo","App","toDo","setToDo","newTask","setNewTask","updateData","setUpdateData","addTask","num","length","newEntry","id","title","status","deleteTask","newTasks","filter","task","markDone","map","cancelUpdate","changeTask","e","target","value","updateTask","filterRecords","updatedObject"],"mappings":"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","sourcesContent":["import {useState} from 'react';\nimport AddTaskForm from './components/AddTaskForm.jsx';\nimport UpdateForm from './components/UpdateForm.jsx';\nimport ToDo from './components/ToDo.jsx';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nfunction App() {\n\n  // Tasks (ToDo List) State\n  const [toDo, setToDo] = useState([]);\n\n  // Temp State\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  // Add task \n  ///////////////////////////\n  const addTask = () => {\n    if(newTask) {\n      let num = toDo.length + 1; \n      let newEntry = { id: num, title: newTask, status: false }\n      setToDo([...toDo, newEntry])\n      setNewTask('');\n    }\n  }\n\n  // Delete task \n  ///////////////////////////\n  const deleteTask = (id) => {\n    let newTasks = toDo.filter( task => task.id !== id)\n    setToDo(newTasks);\n  }\n\n  // Mark task as done or completed\n  ///////////////////////////\n  const markDone = (id) => {\n    let newTask = toDo.map( task => {\n      if( task.id === id ) {\n        return ({ ...task, status: !task.status })\n      }\n      return task;\n    })\n    setToDo(newTask);\n  }\n\n  // Cancel update\n  ///////////////////////////\n  const cancelUpdate = () => {\n    setUpdateData('');\n  }\n\n  // Change task for update\n  ///////////////////////////\n  const changeTask = (e) => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false\n    }\n    setUpdateData(newEntry);\n  }\n\n  // Update task\n  ///////////////////////////\n  const updateTask = () => {\n    let filterRecords = [...toDo].filter( task => task.id !== updateData.id );\n    let updatedObject = [...filterRecords, updateData]\n    setToDo(updatedObject);\n    setUpdateData('');\n  }\n\n  return (\n    <div className=\"container App\">\n\n    <br /><br />\n    <h2>To Do List App (ReactJS)</h2>\n    <br /><br />\n\n    {updateData && updateData ? (\n      <UpdateForm \n        updateData={updateData}\n        changeTask={changeTask}\n        updateTask={updateTask}\n        cancelUpdate={cancelUpdate}\n      />\n    ) : (\n      <AddTaskForm \n        newTask={newTask}\n        setNewTask={setNewTask}\n        addTask={addTask}\n      />\n    )}\n\n    {/* Display ToDos */}\n\n    {toDo && toDo.length ? '' : 'No Tasks man... add smth'}\n\n    <ToDo\n      toDo={toDo}\n      markDone={markDone}\n      setUpdateData={setUpdateData}\n      deleteTask={deleteTask}\n    />  \n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}